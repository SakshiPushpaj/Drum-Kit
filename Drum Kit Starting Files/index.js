/*document.querySelector("button").addEventListener("click",handleClick);
/*it finds the first button listens to event click then call a function handle click/ we wait for the click event to happen before calling the function if we use use paranthesis it will call 
the function before the click during adding event listener*/
/*function handleClick(){
    alert("I got clicked!");
}*/
/*numberOfDrumButtons=document.querySelectorAll(".drum").length;//all selctors whose class is drum
for (var i=0;i<numberOfDrumButtons;i++){
    document.querySelectorAll(".drum")[i].addEventListener("click",function () {
        this.style.color="white";
    });
    
}*/


var numberOfDrumButtons=document.querySelectorAll(".drum").length;
for (var i=0;i<numberOfDrumButtons;i++){
    document.querySelectorAll(".drum")[i].addEventListener("click",function () {

        var buttonInnerHtml=this.innerHTML;/*hen a button is clicked, this.innerHTML captures 
        the inner HTML of the clicked button, storing it in buttonInnerHtml.*/

        makeSound(buttonInnerHtml);/*The makeSound function is called with buttonInnerHtml 
        as the argument, passing it the character inside the button to determine which sound to play.*/
        buttonAnimation(buttonInnerHtml);
    });
}

/*now we want that element should be triggerred on pressing keyboard keys*/
document.addEventListener("keypress",function(event){

    makeSound(event.key);/*In JavaScript, event.key is a property of the event object
     that represents the key a user pressed on the keyboard during a keyboard event,
      like keypress, keydown, or keyup.*/
      /*1.The event object (generated by the keypress event) is passed into the function.

    2.The event.key property then captures the specific key that was pressed. For instance,
     if the user presses "a," event.key will be "a". This allows your code to know which key 
     was pressed and then use this information for further actions.

    3.The value of event.key is passed to the makeSound function, which then plays the 
    corresponding drum sound based on the key's value. */
    buttonAnimation(event.key);//if key is pressed event is tapped then it is passe though buttonAnimation
});

function makeSound(key){
switch (key) {
    case "w":
        var tom1=new Audio("sounds/tom-1.mp3");
        tom1.play();
        break;
    case "a":
        var tom2=new Audio("sounds/tom-2.mp3");
        tom2.play();
        break;
     case "s":
         var tom3=new Audio("sounds/tom-3.mp3");
        tom3.play();
        break;
        case "d":
            var tom4=new Audio("sounds/tom-4.mp3");
            tom4.play();
            break;
         case "j":
        var snare =new Audio("sounds/snare.mp3");
        snare.play();
        break;
        case "k":
        var crash=new Audio("sounds/crash.mp3");
        crash.play();
        break;
        case "l":
        var kick=new Audio("sounds/kick-bass.mp3");
        kick.play();
        break;

    default:console.log(buttonInnerHtml);
}
}
function buttonAnimation(currentKey){

    var activeButton=document.querySelector("."+currentKey);
    activeButton.classList.add("pressed");
    setTimeout(function(){
        activeButton.classList.remove("pressed");
    },100)
}
/* example to use timeout function
const myTimeout = setTimeout(myGreeting, 5000);



const myTimeout = setTimeout(myGreeting, 5000);

function myStopFunction() {
  clearTimeout(myTimeout);}

  function	Required.
The function to execute.
milliseconds	Optional.
Number of milliseconds to wait before executing.
Default value is 0.
*/